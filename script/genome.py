#!/usr/bin/env python3

#########################################################################
# Originally written by Tass Abdessalem, revised by Bingxin Lu
# Description: Class to model the genome_* files generated by the simulation
#########################################################################


class GenomeSegmentFileRecord:
    def __init__(self):    
        self.id = None
        self.shape = None
        self.telomeres = None
        self.centromere = None
        self.nodes = []
        self.size = None
        self.raw = None
    
class NodeRecord:
    def __init__(self):
        self.type = None
        self.fromChr = None
        self.fromHaplotype = None
        self.fromPosition = None
        self.toChr = None
        self.toHaplotype = None
        self.toPosition = None
        self.raw = None

class GenomeFile:
    def __init__(self, filename):
        self.records = self.parseFile(filename)
    
    def parseFile(self, filename):
        data = []
        header_flag = True
        with open(filename, "r") as file:
            for line in file:
                if header_flag:
                    header_flag = False
                    continue
                
                l = line.strip().split("\t")
                fileRecord = GenomeSegmentFileRecord()
                fileRecord.raw = l
                fileRecord.id = l[0]
                fileRecord.shape = l[1]
                fileRecord.telomeres = l[2]
                fileRecord.centromere = l[3]
                fileRecord.size = l[5]
                
                nodeRecords = l[4].split(",")

                for nodeRecordStr in nodeRecords:
                    if (nodeRecordStr == ""):
                        continue

                    nodeRecord = NodeRecord()
                    nodeRecord.raw = nodeRecordStr
                    
                    nodeRecordSplit = nodeRecordStr.split("-")
                    nodeRecord.type = nodeRecordSplit[0]

                    fromSplit = nodeRecordSplit[1].split(":")
                    toSplit = nodeRecordSplit[2].split(":")

                    nodeRecord.fromChr = fromSplit[0]
                    nodeRecord.fromHaplotype = fromSplit[1]
                    nodeRecord.fromPosition = fromSplit[2]

                    nodeRecord.toChr = toSplit[0]
                    nodeRecord.toHaplotype = toSplit[1]
                    nodeRecord.toPosition = toSplit[2]
                    
                    fileRecord.nodes.append(nodeRecord)

                data.append(fileRecord)
        return data